<div id="tagModal" class="modal hide">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
		<h3>Add new tag</h3>
	</div>
	<div class="modal-body">
		<p class="text-error hide">hoo ha</p>
		<p>New tag name:</p>
		<input type="text"></input>
	</div>
	<div class="modal-footer">
		<a href="#" class="btn" data-dismiss="modal"><p>Cancel</p></a>
		<a href="#" class="btn btn-primary"><p>Add Tag</p></a>
	</div>
</div>

<div class ="tagTableContainer pull-right">
		<div style="margin-bottom:10px">
		<i class="icon-tag icon-white"></i><span class="hidden-tablet">
			Tag your graphs<a id="addTag" class="btn" href="#" style="float: right"><i class="icon-plus-sign"></i></a>
		</span></div>
		<ul id="tagTable" class="tagTable">
			<li class="tag"><span class="btn btn-small">Heating</span></li>
			<li class="tag"><span class="btn btn-small">Temperature</span></li>
			<li class="tag"><span class="btn btn-small">Ventilation</span></li>
			<li class="tag"><span class="btn btn-small">AC</span></li>
			<li class="tag"><span class="btn btn-small">Lighting</span></li>
			<li class="tag"><span class="btn btn-small">Type</span></li>
		</ul>
	</div>
	<div id="overlay">
	<ul>
	  <li class="li1"></li>
	  <li class="li2"></li>
	  <li class="li3"></li>
	  <li class="li4"></li>
	  <li class="li5"></li>
	  <li class="li6"></li>
	</ul>
</div>	
<!-- start: Header -->
<div class="navbar">
	<div class="navbar-inner">
		<div class="container-fluid">
			<a class="btn btn-navbar" data-toggle="collapse" data-target=".top-nav.nav-collapse,.sidebar-nav.nav-collapse">
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
				<span class="icon-bar"></span>
			</a>
			<a class="brand" href="index"><span class="hidden-phone">PANGIA</span></a>
							
			<!-- start: Header Menu -->
			<div class="nav-no-collapse header-nav">
				<ul class="nav pull-right">
					<li class="dropdown hidden-phone">
						<a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
							<i class="icon-warning-sign icon-white"></i> <span class="label label-success hidden-phone">3</span>
						</a>
						<ul class="dropdown-menu notifications">
							<li>
								<span class="dropdown-menu-title">You have 3 notifications</span>
							</li>	
							<li>
								<a href="#">
									+ <i class="icon-comment"></i> <span class="message">New report</span> <span class="time">7 min</span> 
								</a>
							</li>
							<li>
								<a href="#">
									+ <i class="icon-comment"></i> <span class="message">New report</span> <span class="time">8 min</span> 
								</a>
							</li>
							<li>
								<a href="#">
									+ <i class="icon-comment"></i> <span class="message">New report</span> <span class="time">16 min</span> 
								</a>
							</li>
							<li>
								<a class="dropdown-menu-sub-footer">View all notifications</a>
							</li>	
						</ul>
					</li>

					<li>
						<a class="btn" href="#">
							<i class="icon-wrench icon-white"></i>
						</a>
					</li>
					<!-- start: User Dropdown -->
					<li class="dropdown">
						<a class="btn dropdown-toggle" data-toggle="dropdown" href="#">
							<i class="icon-user icon-white"></i>
							<span class="caret"></span>
						</a>
						<ul class="dropdown-menu">
							<li><a href="#"><i class="icon-user"></i> Profile</a></li>
							<li><a href="login.html"><i class="icon-off"></i> Logout</a></li>
						</ul>
					</li>
					<!-- end: User Dropdown -->
				</ul>
			</div>
			<!-- end: Header Menu -->
			
		</div>
	</div>
</div>
<!-- start: Header -->

	<div class="container-fluid">
	<div class="row-fluid">
			
		<!-- start: Main Menu -->
		<div class="span2 main-menu-span">
			<div class="nav-collapse sidebar-nav">
				<ul class="nav nav-tabs nav-stacked main-menu">
					<li><a href="dashboard"><i class="icon-home icon-white"></i><span class="hidden-tablet"> Dashboard</span></a></li>
					<li><a href="upload"><i class="icon-edit icon-white"></i><span class="hidden-tablet"> New Report</span></a></li>
					
					
				</ul>
			</div><!--/.well -->
		</div><!--/span-->
		<!-- end: Main Menu -->
		
		<noscript>
			<div class="alert alert-block span10">
				<h4 class="alert-heading">Warning!</h4>
				<p>You need to have <a href="http://en.wikipedia.org/wiki/JavaScript" target="_blank">JavaScript</a> enabled to use this site.</p>
			</div>
		</noscript>
		
		<div id="content" class="span10">
		<!-- start: Content -->
		
		<div>
			<hr>
			<ul class="breadcrumb">
				<li>
					<a href="dashboard">Home</a> <span class="divider">/</span>
				</li>
				<li>
					<a href="#">Anomaly Report</a> 
				</li>
			</ul>
			<hr>
		</div>

		<div class="row-fluid sortable">
			{{#each indexes}}
			<div class="box">
			<div class="box-header">
				<h2><i class="icon-list-alt box-icon"></i><span class="break"></span>
					<div class="box-icon">
						<!-- <a href="#" class="btn-setting"><i class="icon-wrench"></i></a> -->
						<a href="#" class="btn-minimize" id="btn-minimize-{{this}}"><i class="icon-chevron-up"></i></a>
						<!-- <a href="#" class="btn-close"><i class="icon-remove"></i></a> -->
					</div>
					Anomaly #{{this}}
				</h2>
			</div>
			<div class="box-content" id="anomaly{{this}}">
				{{! closing the HTML, end of box }}
			</div>
			</div>
			{{/each}}
			<div id="alarmsdata" data-alarms='{{{data}}}'></div>

			<script>
			function createGraphs() {
				var alarms = JSON.parse($('#alarmsdata').attr('data-alarms'));

				/*
				 * Loop through the JSON object.
				 * The structure of the object is:
				 *	[
				 *		[
				 *			{
				 *				label: label of graph,
				 *				data: [ [datum 1, datum 2] ... ],
				 *			},
				 *			{
				 *				label: label of graph,
				 *				data: [ [datum 1, datum 2] ... ],
				 *			},
				 *			[ int start of alarm, int end of alarm ]
				 *		]
				 *		...
				 *	]
				 */
				for (var i = 0; i < alarms.length; i++) {
					//This needs to eventually be made into responsive widths and heights and not absolute values	
					var margin = {top: 20, right: 20, bottom: 120, left: 50},
						width = 960 - margin.left - margin.right,
						height = 300 - margin.top - margin.bottom;

					// All the time values are given in seconds, so we
					// convert them to milliseconds.
					var alarmStart = alarms[i][2][0][0] * 1000;
					var alarmEnd = alarms[i][2][0][1] * 1000;

					// For each dataset in the alarm (of which there will
					// always be exactly two), create a graph.
					for (var j = 0; j < 2; j++) {
						// The data is set.data
						var set = alarms[i][j];
						var startDate = new Date(set.data[0][0] * 1000);

						var x = d3.time.scale.utc()
							.range([0, width]);

						var y = d3.scale.linear()
							.range([height, 0]);
						
						var xAxis = d3.svg.axis()
							.scale(x)
							.orient("bottom")
							.tickFormat(d3.time.format.utc("%X"));
						
						var yAxis = d3.svg.axis()
							.scale(y)
							.orient("left");
						
						var line = d3.svg.line()
							.x(function (d) { return x(d[0] * 1000); })
							.y(function (d) { return y(d[1]); });

						//scale the x and y axes here 	  
						x.domain(d3.extent(set.data, function (d) { return d[0] * 1000; }));
						y.domain(d3.extent(set.data, function (d) { return d[1]; }));

						//Insert a holder for tags before the chart.
						$('#anomaly' + i).append($('<ul class="tagHolder tagTable"></ul>'));
						//Insert SVG graph into dynamically generated Anomaly Container of id i
						var svg = d3.select("#anomaly" + i).append("svg")
							.attr("height", height + margin.top + margin.bottom)
							.append("g")
							.attr("transform", "translate(" + margin.left + "," + margin.top + ")")
							.attr("viewBox","0 0 50 50"); 
						
						//This is the alarm highlight rectangle, needs to be updated with the alarm start time and end time for it's x and width values
						svg.append("rect")
							.attr("x", x(alarmStart))
							.attr("y", 0)
							.attr("width", x(alarmEnd) - x(alarmStart))
							.attr("height", height)
							.attr("class", "rect");
						
						svg.append("g")
							.attr("class", "x axis")
							.attr("transform", "translate(0," + height + ")")
							.call(xAxis)
							.selectAll("text")  
							.style("text-anchor", "end")
							.attr("dx", "-.8em")
							.attr("dy", ".15em")
							.attr("transform", function(d) {
							  return "rotate(-65)";
							});
						
						svg.append("g")
							.attr("class", "y axis")
							.call(yAxis)
							.append("text")
							.attr("transform", "rotate(-90)")
							.attr("y", 6)
							.attr("dy", ".71em")
							.style("text-anchor", "end")
							//set the y axis label here
							.text(set.label);
						
						svg.append("text")
							.attr("class", "x label")
							.attr("text-anchor", "end")
							//.attr("x", width)
							.attr("x", 75)
							.attr("y", height - 6)
							.text(d3.time.format.utc("%Y-%b-%d")(startDate));

						  svg.append("path")
							  .datum(set.data)
							  .attr("class", "line")
							  .attr("d", line);

					}
				}
			}

			$(document).ready(function () {
				createGraphs();

				$('.tagTableContainer').draggable();

				$('.tagTable li').draggable({
					helper: 'clone'
				});

				$('svg').droppable({
					drop: function (e, ui) {
						var tagHolder = $(this).prev();
						var spans = tagHolder.find('span');
						var tagText = ui.draggable.text().trim();
						var clone, tagremove;
						var i;

						// If the dragged item is *not* a tag, ignore it.
						if (!$(ui.draggable).hasClass('tag')) {
							return;
						}

						// Make sure that the tag isn't already present
						for (i = 0; i < spans.length; i++) {
							var s = $(spans[i]);
							if (s.text().trim() == tagText) {
								// This tag is already present, so abort.
								return;
							}
						}
						// Create a clone then add the remove button
						clone = ui.draggable.clone();
						tagremove = $('<a href="#" class="tagRemove btn-close"><i class="icon-remove"></i></a>');
						// Remove the tag when the remove button is clicked.
						tagremove.click(function (e) {
							$(e.target).parents('li').remove();
						});
						clone.find('span').append(tagremove);
						tagHolder.append(clone);
					}
				});

				var modal = $('#tagModal');
				var newtagname = modal.find('input');
				var errorbox = modal.find('.text-error');
				modal.find('.modal-footer').children('.btn-primary').click(function() {
					var n = newtagname.val();
					if (n === "") {
						errorbox.show();
					} else {
						$('#tagTable').append($('<li class="tag"><span class="btn btn-small">'
						  + n + '</span></li>').draggable({ helper: 'clone' }));
						modal.modal('hide');
					}
				});

				$('#addTag').click(function () {
					errorbox.hide();
					modal.modal('show');
				});

			});

			</script>
		</div><!--/row-->

	
	
				<hr>
		<!-- end: Content -->
		</div><!--/#content.span10-->
			</div><!--/fluid-row-->

	<div class="modal hide fade" id="myModal">
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal">×</button>
			<h3>Settings</h3>
		</div>
		<div class="modal-body">
			<p>Here settings can be configured...</p>
		</div>
		<div class="modal-footer">
			<a href="#" class="btn" data-dismiss="modal">Close</a>
			<a href="#" class="btn btn-primary">Save changes</a>
		</div>
	</div>
	
	<div class="clearfix"></div>
			
	<footer>
		<p>
			<span style="text-align:left;float:left">&copy; <a href="http://clabs.co" target="_blank">Pangia</a> 2012</span>
		</p>

	</footer>
			
</div><!--/.fluid-container-->
